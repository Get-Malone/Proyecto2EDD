/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Clases.ArbolBinario;
import Clases.Archivos;
import Clases.ColaDinamica;
import Clases.Multilistas;
import Clases.Nodo;
import Clases.NodoArbol;
import Clases.Propiedades;
import Clases.TablasHash;
import static Vistas.VtnContacto.validaC;
import cjb.ci.Mensaje;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author zgame
 */
public class VtnGrupo extends javax.swing.JFrame {

    public static Nodo r = null;//RAIZ

    public static NodoArbol rb = null;

    public static ArbolBinario ab = new ArbolBinario();

    /**
     * Creates new form VtnGrupos
     *///***************************
    public void transparenciaBotones() //PONER EN VtnGrupo
    {
        jBEliminarG.setOpaque(false);
        jBEliminarG.setContentAreaFilled(false);
        jBEliminarG.setBorderPainted(false);

        jBBusca.setOpaque(false);
        jBBusca.setContentAreaFilled(false);
        jBBusca.setBorderPainted(false);

        jBAgregarG.setOpaque(false);
        jBAgregarG.setContentAreaFilled(false);
        jBAgregarG.setBorderPainted(false);

        jBCerrar.setOpaque(false);
        jBCerrar.setContentAreaFilled(false);
        jBCerrar.setBorderPainted(false);
        
        jBAsistente.setOpaque(false);
        jBAsistente.setContentAreaFilled(false);
        jBAsistente.setBorderPainted(false);
        
    }
    
    public boolean valida(String s)
    {
        boolean valida=false;
        for (int i = 0; i < s.length(); i++)
	{
            char caracter = s.toUpperCase().charAt(i);
            int valorASCII = (int)caracter;
            if (valorASCII > 64 && valorASCII < 91)
            {
                valida=true;
                //return false; //Se ha encontrado un caracter que no es letra 
            }
            if (valorASCII>97  && valorASCII<123)
            {
                valida=true;
                //return false; //Se ha encontrado un caracter que no es letra 
            }
            if (valorASCII>47 && valorASCII<58) 
            {
                valida=true;
            }
            
	}
        
        System.out.println("VALOR DE VALIDA:"+valida);
        
        boolean validatodo=false;
        
        if (s.length()==0) 
        {
            Mensaje.error(this,"Campo vacio, debe ingresar un nombre primero");
            validatodo=false;
        } else 
        { 
            if (valida==false) 
            {
                Mensaje.error(this,"Error, caracter invalido detectado");
                validatodo=false;
            } else 
            {
                validatodo=true;
            }
        }
        
        System.out.println("VALIDA TODO;"+validatodo);
        return validatodo;
    }
    
    public static boolean validaG(Nodo r, String etq)//valida que el nombre de un grupo no se repita 
    {
        boolean aux = false;
        while (r != null)
        {
            if (r.getEtq().equals(etq))
            {
                aux = true;
                break;
            } else
            {
                r = r.getSig();
            }
        }
        System.out.println("EL DATO QUE ENCONTRE FUE:"+aux);
        return aux;
    }
    

    public VtnGrupo() {
        initComponents();
        this.setLocationRelativeTo(null); // CENTRA LA PANTALLA

        jLGrupos.setForeground(Color.WHITE); //PONE EL COLOR DE LA ETIQUETA EN BLANCO
        JPGrupos.setBackground(Color.WHITE);//PONE BLANCO EL COLOR DEL PANEL

        JPGrupos.setLayout(new BoxLayout(JPGrupos, BoxLayout.PAGE_AXIS));//CAMBIA EL ESTILO DE EL PANEL, PERMITE QUE LOS BOTONES NO OCUPEN TODA LA PANTALLA

        transparenciaBotones();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBAgregarG = new javax.swing.JButton();
        jBEliminarG = new javax.swing.JButton();
        jLGrupos = new javax.swing.JLabel();
        jLAgregarG = new javax.swing.JLabel();
        jLEliminarG = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jBBusca = new javax.swing.JButton();
        jBCerrar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        JPGrupos = new javax.swing.JPanel();
        jBAsistente = new javax.swing.JButton();
        jLFondoG = new javax.swing.JLabel();
        jLFondoG1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jBAgregarG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/mas50.png"))); // NOI18N
        jBAgregarG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAgregarGActionPerformed(evt);
            }
        });
        getContentPane().add(jBAgregarG, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 470, 60, 50));

        jBEliminarG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/borrarNuevo.png"))); // NOI18N
        jBEliminarG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEliminarGActionPerformed(evt);
            }
        });
        getContentPane().add(jBEliminarG, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 470, 60, 50));

        jLGrupos.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLGrupos.setText("Grupos");
        getContentPane().add(jLGrupos, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, -1, -1));

        jLAgregarG.setText("Agregar");
        getContentPane().add(jLAgregarG, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 516, 50, 30));

        jLEliminarG.setText("Eliminar");
        getContentPane().add(jLEliminarG, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 520, 60, 20));

        jLabel1.setText("Busqueda");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(205, 516, 70, 30));

        jBBusca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/buscarNuevo.png"))); // NOI18N
        jBBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscaActionPerformed(evt);
            }
        });
        getContentPane().add(jBBusca, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 470, 60, -1));

        jBCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cerrar3.png"))); // NOI18N
        jBCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCerrarActionPerformed(evt);
            }
        });
        getContentPane().add(jBCerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20, 30, 30));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        JPGrupos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        JPGrupos.setLayout(new java.awt.GridLayout(0, 1, 0, 1));
        jScrollPane1.setViewportView(JPGrupos);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 290, 360));

        jBAsistente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/nuevoPregunta25.png"))); // NOI18N
        jBAsistente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAsistenteActionPerformed(evt);
            }
        });
        getContentPane().add(jBAsistente, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 530, 30, -1));

        jLFondoG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondowhats.png"))); // NOI18N
        getContentPane().add(jLFondoG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, -1, -1));

        jLFondoG1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondowa2.jpg"))); // NOI18N
        getContentPane().add(jLFondoG1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBAgregarGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAgregarGActionPerformed

        //PRUEBA DE COMMIT
        String s = "";

        s = JOptionPane.showInputDialog("Escriba el nombre de la categoria a a√±adir"); //ETIQUETA PARA LA CATEGORIA NUEVA
        
        if (s == null) {
            //Evita el NPE al salir del showInputDialog o presionar cancelar
        }else if (s.length()==0) 
        {
            Mensaje.error(this, "Campo vacio, debe escribir un nombre");
        } 
        else 
        {
            
            if (validaG(r,s)==true) 
            {
                Mensaje.error(this,"El grupo que desea ingresar se encuentra repetido, por favor ingrese uno diferente");
            }
            else
            {
                Nodo nom = new Nodo(null, s);

                String[] etqs = new String[1];
                //arreglo de etiquetas
                //esta en 1 lo cual significa que esta en el nivel 0

                etqs[0] = s;

                r = Multilistas.inserta(r, nom, 0, etqs);





                Propiedades p = new Propiedades(r, TablasHash.arr);

                try {
                    Archivos.guardar(p, this);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(vtnChat.class.getName()).log(Level.SEVERE, null, ex);
                }

                if (r != null) {
                    Nodo aux = r;

                    JPGrupos.removeAll();

                    while (aux != null) {
                        JButton boton = new JButton(aux.getEtq());

                        boton.setBackground(Color.WHITE);//PONE EL FONDO DEL BOTON EN BLANCO
                        boton.setForeground(Color.BLACK);//PONE LAS LETRAS COLOR NEGRO
                        boton.setFont(new Font("arial", 1, 14));//CAMBIA LA FUENTE Y EL TAMA√ëO

                        //ESTABLECE UN TAMA√ëO POR DEFECTO PARA LOS BOTONES
                        boton.setMinimumSize(new Dimension(JPGrupos.getWidth(), 50));
                        boton.setMaximumSize(new Dimension(JPGrupos.getWidth(), 50));
                        boton.setPreferredSize(new Dimension(JPGrupos.getWidth(), 50));

                        JPGrupos.add(boton);

                        boton.addActionListener(new ActionListener()//pone una accion al boton
                        {
                            @Override
                            public void actionPerformed(ActionEvent e)//accion del boton
                            {
                                VtnContacto c = new VtnContacto();
                                c.d = boton.getText();
                                c.setVisible(true);

                            }
                        });
                        aux = aux.getSig();
                    }

                }

                
            }////////////////////////////////////////
        }

        JPGrupos.revalidate();
        JPGrupos.repaint();
        

    }//GEN-LAST:event_jBAgregarGActionPerformed

    private void jBEliminarGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEliminarGActionPerformed

        
        //JPGrupos.removeAll();
        
        if (r!=null) 
        {
        ArbolBinario abE = new ArbolBinario();

        String s = "";

        s = JOptionPane.showInputDialog("Escriba el nombre de la categoria a eliminar"); //ETIQUETA PARA LA CATEGORIA NUEVA

        if (s == null) {
            //Evita el NPE al salir del showInputDialog o presionar cancelar
        }else if (s.length() == 0) {
            Mensaje.error(this, "Campo vacio, debe escribir un nombre");
        } else {
            
            if (validaG(r, s)==false)//significa que no encontro nada 
                {
                    Mensaje.error(this, "No se encontro el grupo que desea eliminar");
                }
                else
                {
                    Nodo nom = new Nodo(null, s);

                    String[] etqs = new String[1];//arreglo de etiquetas

                    etqs[0] = s;

                    boolean c = false;

                    if (cjb.ci.Mensaje.pregunta(this, "Eliminar grupo\nSe eliminaran los contactos "
                            + "y conversaciones asociados a este grupo\n¬øContinuar?") == 0) {
                        c = true;
                    }

                    if (c) {//hacer una mezca de las dos, es decir buscar primero en la multilista, en el grupo que se quiere eliminar, y eliminar uno por uno
                        //a los miembros de esa multilista.

                        Nodo rb = Multilistas.busca(r, s);

                        rb = rb.getAbj();

                        if (rb != null) {
                            System.out.println("/////////////////////////////\n/////////////////////////" +rb.getEtq());
                            Nodo aux = rb;

                            while (aux != null) {
                                NodoArbol [] arrB = new NodoArbol[2];
                                int pos = aux.getEtq().toUpperCase().codePointAt(0) -65;

                                abE.elimina(TablasHash.arr[pos], aux.getEtq(), arrB);

                                aux = aux.getSig();
        //                        System.out.println("*******************************\n*************************" +aux.getEtq());
                            }
                        }

        //                int pos = s.toUpperCase().codePointAt(0) - 65;

                        r = Multilistas.elimina(r, 0, etqs);
                        
                        Propiedades p = new Propiedades(r, TablasHash.arr);

                        try {
                            Archivos.guardar(p, this);
                        } catch (FileNotFoundException ex) {
                            Logger.getLogger(vtnChat.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                    //
                    if (r != null) {
                        Nodo aux = r;

                        while (aux != null) {

                            JButton boton = new JButton(aux.getEtq());

                            Component componentes[] = JPGrupos.getComponents();

                            for (int i = 0; i < componentes.length; i++) {
                                System.out.println(((JButton) componentes[i]).getText());
                                if (etqs[0].equals(((JButton) componentes[i]).getText().trim())) {
                                    JPGrupos.remove(i);
                                }
                            }

                            boton.addActionListener(new ActionListener()//pone una accion al boton
                            {
                                @Override
                                public void actionPerformed(ActionEvent e)//accion del boton
                                {
                                    VtnContacto c = new VtnContacto();
                                    c.d = boton.getText();
                                    c.setVisible(false);

                                }
                            });
                            aux = aux.getSig();
                        }
                    }

            //if (c) {
                //JPGrupos.revalidate();
                //JPGrupos.repaint();
            //}
                }/////////////////////////////////////
            
            
        }
        
        //JPGrupos.revalidate();
        //JPGrupos.repaint();

        //JPGrupos.updateUI();
        
        //this.setVisible(false);
        //this.setVisible(true);
        
        System.out.println(Multilistas.desp(r, 0));
        
        }
        else
        {
            Mensaje.error(this, "La lista se encuentra vacia, no puede eliminar elementos");
        }
        
        //JPGrupos.removeAll();
        //JPGrupos.revalidate();
        //JPGrupos.repaint();
        
        //new VtnGrupo().setVisible(false);
        //dispose();
        
        //this.setVisible(false);
        
        JPGrupos.revalidate();
        JPGrupos.repaint();
        //this.setVisible(true);
        
        //JFrame.

        //JPGrupos.updateUI();
    }//GEN-LAST:event_jBEliminarGActionPerformed

    private void jBBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscaActionPerformed

        //PROBAR CUANDO FUNCIONE LA PARTE DE ARBOLES BINARIOS
        //nb=NOMBRE A BUSCAR
        
        
        //VALIDAR CUANDO LA LISTA ESTA VACIA
        
        /*if (r == null) 
        {
            JOptionPane.showMessageDialog(rootPane, "La agenda se encuentra vacia");

        }*/ 
            if (r!=null) 
            {
            String nb = null;

            nb = JOptionPane.showInputDialog("Escriba el nombre del grupo que desea buscar");
            
            
            if (nb == null) 
            {
                System.out.println("");
            } else 
            {
                if (nb.length()!=0)
                {
                    Nodo aux = null;
                    while (r != null)
                    {
                        if (r.getEtq().equals(nb))
                        {
                            aux = r;
                            break;
                        } else
                        {
                            r = r.getSig();
                        }
                    }
                    if (aux!=null) 
                    {
                        JOptionPane.showMessageDialog(rootPane,"El grupo encontrado es:" +aux.getEtq());

                        VtnContacto contacto = new VtnContacto();
                        contacto.d = aux.getEtq();
                        contacto.setVisible(true);
                        //dispose();

                    }else
                    {
                        Mensaje.error(this,"No se encontro el grupo");
                    }
                }
                else
                {
                    Mensaje.error(this,"Debe escribir un grupo a buscar");
                }
                
                
            }
            }
            else
            {
                Mensaje.error(this,"La agenda se encuentra vacia");
            }
            
    }//GEN-LAST:event_jBBuscaActionPerformed

    private void jBCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCerrarActionPerformed

        //PONER AQUI EL CODIGO PARA GUARDAR ARCHIVOS
        System.exit(0);
    }//GEN-LAST:event_jBCerrarActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        try {
            Archivos.carga(this);
        } catch (IOException ex) {
            Logger.getLogger(VtnGrupo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(VtnGrupo.class.getName()).log(Level.SEVERE, null, ex);
        }

//        System.out.println(ab.enOrden(rb));
        if (r == null) 
        {
            /*JPGrupos.removeAll();
            JPGrupos.revalidate();
            JPGrupos.repaint();*/
            Mensaje.error(this, "No hay datos en la lista");
        } else {
            Nodo aux = r;

            JPGrupos.removeAll();

            while (aux != null) {
                JButton boton = new JButton(aux.getEtq());

                boton.setBackground(Color.WHITE);//PONE EL FONDO DEL BOTON EN BLANCO
                boton.setForeground(Color.BLACK);//PONE LAS LETRAS COLOR NEGRO
                boton.setFont(new Font("arial", 1, 14));//CAMBIA LA FUENTE Y EL TAMA√ëO

                //ESTABLECE UN TAMA√ëO POR DEFECTO PARA LOS BOTONES
                boton.setMinimumSize(new Dimension(JPGrupos.getWidth(), 50));
                boton.setMaximumSize(new Dimension(JPGrupos.getWidth(), 50));
                boton.setPreferredSize(new Dimension(JPGrupos.getWidth(), 50));

                JPGrupos.add(boton);

                boton.addActionListener(new ActionListener()//pone una accion al boton
                {
                    @Override
                    public void actionPerformed(ActionEvent e)//accion del boton
                    {
                        VtnContacto c = new VtnContacto();
                        c.d = boton.getText();
                        c.setVisible(true);

                    }
                });
                aux = aux.getSig();
            }
            JPGrupos.revalidate();
        JPGrupos.repaint();
        }

        JPGrupos.revalidate();
        JPGrupos.repaint();

        System.out.println(Multilistas.desp(r, 0));
//        rb = TablasHash.arr[15];
//        System.out.println(ab.enOrden(rb));
        System.out.println(TablasHash.muestra());
        
        ab.balancear(TablasHash.arr[0]);

        System.out.println(ab.enOrden(TablasHash.arr[3]));
        System.out.println(ab.preOrden(TablasHash.arr[3]));
        System.out.println(ab.enOrden(TablasHash.arr[1]));
        System.out.println(ab.preOrden(TablasHash.arr[1]));
        System.out.println(ab.enOrden(TablasHash.arr[9]));

        if (TablasHash.arr[0] != null) {

            int altura = ab.altura(TablasHash.arr[0], 0);

            System.out.println("La altura de el arbol en la posicion " + 0 + " es " + altura);

        }
        
        //JPGrupos.removeAll();
        JPGrupos.revalidate();
        JPGrupos.repaint();
    }//GEN-LAST:event_formWindowOpened

    private void jBAsistenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAsistenteActionPerformed
        JOptionPane.showMessageDialog(rootPane, "                                                 ¬°Bienvenido a la ventana de grupos!\n"
                                             +"En cada grupo podras almacenar distintos contactos dependiendo de como quieras organizarlos\n"
                                             + "En esta ventana podras realizar distintas acciones como agregar o eliminar un grupo\n"+ 
                                                "Asi como buscar entre los distintos grupos que tengas y observar los contactos que contiene");
    }//GEN-LAST:event_jBAsistenteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VtnGrupo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VtnGrupo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VtnGrupo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VtnGrupo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VtnGrupo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JPGrupos;
    private javax.swing.JButton jBAgregarG;
    private javax.swing.JButton jBAsistente;
    private javax.swing.JButton jBBusca;
    private javax.swing.JButton jBCerrar;
    private javax.swing.JButton jBEliminarG;
    private javax.swing.JLabel jLAgregarG;
    private javax.swing.JLabel jLEliminarG;
    private javax.swing.JLabel jLFondoG;
    private javax.swing.JLabel jLFondoG1;
    private javax.swing.JLabel jLGrupos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
