/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Clases.Archivos;
import Clases.Multilistas;
import Clases.Nodo;
import Clases.Propiedades;
import Clases.TablasHash;
import cjb.ci.Mensaje;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileNotFoundException;
import java.time.LocalDate;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author zgame
 */
public class VtnHistorial extends javax.swing.JFrame {

    public String d1;
    public String d2;
    public Nodo r2;

    /**
     * Creates new form MnuHistorial
     */
    public void transparenciaBotones() 
    {
        jBAgregarH.setContentAreaFilled(false);
        jBEliminarH.setContentAreaFilled(false);
        jBRegresarH.setContentAreaFilled(false);
        jBAsistente.setContentAreaFilled(false);

    }

    public static boolean validaH(Nodo r, String etq)//valida que el nombre de un grupo no se repita 
    {
        boolean aux = false;
        while (r != null) {
            if (r.getEtq().equals(etq)) {
                aux = true;
                break;
            } else {
                r = r.getSig();
            }
        }
        System.out.println("EL DATO QUE ENCONTRE FUE:" + aux);
        return aux;
    }

    public VtnHistorial() {
        initComponents();
        this.setLocationRelativeTo(null);//CENTRA LA PANTALLA

        jLHistorial.setForeground(Color.WHITE); //PONE EL COLOR DE LA ETIQUETA DE GRUPOS EN BLANCO
        JPHistorial.setBackground(Color.WHITE);//PONE BLANCO EL COLOR DEL PANEL

        //JPGrupos.setLayout(new GridLayout(0, 1, 10, 10));
        JPHistorial.setLayout(new BoxLayout(JPHistorial, BoxLayout.PAGE_AXIS));//CAMBIA EL ESTILO DE EL PANEL, PERMITE QUE LOS BOTONES NO OCUPEN TODA LA PANTALLA

        transparenciaBotones();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLHistorial = new javax.swing.JLabel();
        jBAgregarH = new javax.swing.JButton();
        jBEliminarH = new javax.swing.JButton();
        jLEliminarH = new javax.swing.JLabel();
        jBRegresarH = new javax.swing.JButton();
        jLAgregarH = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JPHistorial = new javax.swing.JPanel();
        jBAsistente = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLFondoH = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLHistorial.setBackground(new java.awt.Color(255, 255, 255));
        jLHistorial.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLHistorial.setText("Historial de Chats");
        getContentPane().add(jLHistorial, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, -1, -1));

        jBAgregarH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/agregarF2Nuevo.png"))); // NOI18N
        jBAgregarH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAgregarHActionPerformed(evt);
            }
        });
        getContentPane().add(jBAgregarH, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 470, 54, -1));

        jBEliminarH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/borrarNuevo.png"))); // NOI18N
        jBEliminarH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEliminarHActionPerformed(evt);
            }
        });
        getContentPane().add(jBEliminarH, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 470, 54, -1));

        jLEliminarH.setText("Eliminar");
        getContentPane().add(jLEliminarH, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 530, -1, -1));

        jBRegresarH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/atrasNuevo.png"))); // NOI18N
        jBRegresarH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRegresarHActionPerformed(evt);
            }
        });
        getContentPane().add(jBRegresarH, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 40, 30));

        jLAgregarH.setText("Agregar");
        getContentPane().add(jLAgregarH, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 530, 60, -1));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        JPHistorial.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        JPHistorial.setLayout(new java.awt.GridLayout(0, 1, 0, 1));
        jScrollPane1.setViewportView(JPHistorial);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 280, 360));

        jBAsistente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/nuevoPregunta25.png"))); // NOI18N
        jBAsistente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAsistenteActionPerformed(evt);
            }
        });
        getContentPane().add(jBAsistente, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 530, 30, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondowa2.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLFondoH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondowhats.png"))); // NOI18N
        getContentPane().add(jLFondoH, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBAgregarHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAgregarHActionPerformed
///////////////////////////////////////////////////////////////
        VtnW c = new VtnW();
        boolean b1 = true;//BANDERA PARA VERIFICAR SI ESTA BIEN ESCRITA LA FECHA
        boolean b2 = true;//BANDERA PARA VERIFICAR SI ESTA BIEN ESCRITA LA FECHA

        String s = "";
        s = JOptionPane.showInputDialog("Escriba la nueva fecha a agregar\n Recuerde que debe ser en el formato dd/mm/aaaa");

        if (s == null) {
            b1 = false;
        } else if (s.length() != 0) {
            String partes[] = s.split("/");
            try {
                LocalDate.of(Integer.parseInt(partes[2]), Integer.parseInt(partes[1]), Integer.parseInt(partes[0]));
            } catch (Exception e) {
                Mensaje.error(this, "La fecha que ingresaste es incorrecta");
                b2 = false;
            }
        }

        if (b1 == false || validaH(r2, s) == true) {
            if (b1 == false) {
            } else {
                Mensaje.error(this, "La fecha que ingresaste ya existe, porfavor ingresa una diferente");
            }
        } else if (s.length() != 0 && b2 != false) {

            if (b2 = true) {
                Nodo his = new Nodo(c.c, s, 0, c.p1, c.p2);
                String[] etqs = new String[3];
                etqs[0] = d1;
                etqs[1] = d2;
                etqs[2] = s;

                VtnGrupo.r = Multilistas.inserta(VtnGrupo.r, his, 0, etqs);

                Propiedades p = new Propiedades(VtnGrupo.r, VtnGrupo.arr);

                try {
                    Archivos.guardar(p, this);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(VtnW.class.getName()).log(Level.SEVERE, null, ex);
                }

                r2 = Multilistas.busca(VtnGrupo.r, d1);
                r2 = r2.getAbj();
                r2 = Multilistas.busca(r2, d2);
                JPHistorial.removeAll();
                r2 = r2.getAbj();

                if (r2 != null) {
                    Nodo aux = r2;
                    while (aux != null) {
                        JButton boton = new JButton(aux.getEtq());

                        boton.setBackground(Color.WHITE);//PONE EL FONDO DEL BOTON EN BLANCO
                        boton.setForeground(Color.BLACK);//PONE LAS LETRAS COLOR NEGRO
                        boton.setFont(new Font("arial", 1, 14));//CAMBIA LA FUENTE Y EL TAMAÑO

                        //ESTABLECE UN TAMAÑO POR DEFECTO PARA LOS BOTONES
                        boton.setMinimumSize(new Dimension(JPHistorial.getWidth(), 100));
                        boton.setMaximumSize(new Dimension(JPHistorial.getWidth(), 50));
                        boton.setPreferredSize(new Dimension(JPHistorial.getWidth(), 100));

                        JPHistorial.add(boton);
                        boton.addActionListener(new ActionListener() {
                            @Override
                            public void actionPerformed(ActionEvent e) {
                                VtnW nivel3 = new VtnW();
                                nivel3.d1 = d1;
                                nivel3.d2 = d2;
                                nivel3.d3 = boton.getText();
                                nivel3.setVisible(true);
                            }
                        }
                        );
                        aux = aux.getSig();
                    }
                }
                JPHistorial.revalidate();
                JPHistorial.repaint();
            } else {
                Mensaje.error(this, "Formato de fecha no valido");
            }
        } else {
            if (s.length() == 0) {
                Mensaje.error(this, "No puede haber campos vacios");
            }
        }
    }//GEN-LAST:event_jBAgregarHActionPerformed

    private void jBRegresarHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRegresarHActionPerformed
        VtnContacto c = new VtnContacto();
        c.d = d1;
        c.setVisible(true);
        dispose();
    }//GEN-LAST:event_jBRegresarHActionPerformed

    private void jBEliminarHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEliminarHActionPerformed
        boolean b1 = true;//BANDERA PARA VERIFICAR SI ESTA BIEN ESCRITA LA FECHA
        boolean b2 = true;//BANDERA PARA VERIFICAR SI ESTA BIEN ESCRITA LA FECHA

        String s = "";
        s = JOptionPane.showInputDialog("Escriba la fecha a eliminar");

        if (s == null) {
            b1 = false;
        } else if (s.length() != 0) {
            String partes[] = s.split("/");
            try {
                LocalDate.of(Integer.parseInt(partes[2]), Integer.parseInt(partes[1]), Integer.parseInt(partes[0]));
            } catch (Exception e) {
                Mensaje.error(this, "La fecha que ingresaste es incorrecta");
                b2 = false;
            }
        }

        if (b1 == false) {

        } else if (s.length() != 0) 
        {
            if (b2!=false) 
            {
                String[] etqs = new String[3];
                etqs[0] = d1;
                etqs[1] = d2;
                etqs[2] = s;

                boolean c = false;

                if (cjb.ci.Mensaje.pregunta(this, "Eliminar conversación\nSe eliminaran los datos "
                        + "asociados a esta conversación\n¿Desea continuar?") == 0) {
                    c = true;
                }

                if (c==true) 
                {
                    VtnGrupo.r = Multilistas.elimina(VtnGrupo.r, 0, etqs);

                    Propiedades p = new Propiedades(VtnGrupo.r, VtnGrupo.arr);

                    try {
                        Archivos.guardar(p, this);
                    } catch (FileNotFoundException ex) {
                        System.out.println("No se encontro el archivo");
                    }

                    //movi esto dentro del if
                    r2 = Multilistas.busca(VtnGrupo.r, d1);
                    r2 = r2.getAbj();
                    r2 = Multilistas.busca(r2, d2);
                    r2 = r2.getAbj();

                    if (r2 != null) {
                        Component componentes[] = JPHistorial.getComponents();

                        for (int i = 0; i < componentes.length; i++) {
                            System.out.println(((JButton) componentes[i]).getText());
                            if (etqs[2].equals(((JButton) componentes[i]).getText().trim())) {
                                JPHistorial.remove(i);
                            }
                        }
                    } else {
                        JPHistorial.removeAll();
                    }   
                }
                
            }            
        } 
        else 
        {
            Mensaje.error(this, "No puede haber campos vacios");
        }
        JPHistorial.updateUI();

    }//GEN-LAST:event_jBEliminarHActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        r2 = Multilistas.busca(VtnGrupo.r, d1);
        r2 = r2.getAbj();
        r2 = Multilistas.busca(r2, d2);
        JPHistorial.removeAll();
        r2 = r2.getAbj();
        
        if (r2 != null) {
            Nodo aux = r2;
            while (aux != null) {
                JButton boton = new JButton(aux.getEtq());

                boton.setBackground(Color.WHITE);//PONE EL FONDO DEL BOTON EN BLANCO
                boton.setForeground(Color.BLACK);//PONE LAS LETRAS COLOR NEGRO
                boton.setFont(new Font("arial", 1, 14));//CAMBIA LA FUENTE Y EL TAMAÑO

                boton.setMinimumSize(new Dimension(JPHistorial.getWidth(), 50));
                boton.setMaximumSize(new Dimension(JPHistorial.getWidth(), 50));
                boton.setPreferredSize(new Dimension(JPHistorial.getWidth(), 50));

                JPHistorial.add(boton);
                boton.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        VtnW nivel3 = new VtnW();
                        nivel3.d1 = d1;
                        nivel3.d2 = d2;
                        nivel3.d3 = boton.getText();
                        nivel3.setVisible(true);
                    }
                }
                );
                aux = aux.getSig();
            }
        }
        JPHistorial.revalidate();
        JPHistorial.repaint();
    }//GEN-LAST:event_formWindowOpened

    private void jBAsistenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAsistenteActionPerformed
        JOptionPane.showMessageDialog(rootPane, "                                                                       ¡Bienvenido a la ventana de historial!\n"
                + "En esta ventana podras realizar distintas acciones como agregar o eliminar las fechas en las que hayas tenido conversaciones\n"
                + "Asi como buscar y acceder entre las distintas fechas que tengas y observar su contenido");

        JOptionPane.showMessageDialog(rootPane, "¡Recuerda que al ingresar una fecha debe ser bajo el formato dd/mm/aaaa!");
    }//GEN-LAST:event_jBAsistenteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VtnHistorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VtnHistorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VtnHistorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VtnHistorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VtnHistorial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JPHistorial;
    private javax.swing.JButton jBAgregarH;
    private javax.swing.JButton jBAsistente;
    private javax.swing.JButton jBEliminarH;
    private javax.swing.JButton jBRegresarH;
    private javax.swing.JLabel jLAgregarH;
    private javax.swing.JLabel jLEliminarH;
    private javax.swing.JLabel jLFondoH;
    private javax.swing.JLabel jLHistorial;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
